## In order to use a custom Kieker.Monitoring configuration, create a copy of 
## this file and modify it according to your needs. 
##
## The location of the file is passed to Kieker.Monitoring via the JVM parameter
## kieker.monitoring.configuration. For example, with a configuration file named 
## my.kieker.monitoring.properties in the folder META-INF you would pass this location 
## to the JVM when starting your application:
##
##  java -Dkieker.monitoring.configuration=META-INF/my.kieker.monitoring.properties [...]
##
## If no configuration file is passed, Kieker tries to use a configuration file in
## META-INF/kieker.monitoring.properties
## If this also fails, a default configuration is being used according to the values in 
## this default file.

## The name of the Kieker instance.
kieker.monitoring.name=KIEKER-KoPeMe


###########################
#######    WRITER   #######
###########################
## Selection of monitoring data writer (classname)
## The value must be a fully-qualified classname of a class implementing 
## kieker.monitoring.writer.IMonitoringWriter and providing a constructor that 
## accepts a single Configuration. 
#kieker.monitoring.writer=kieker.monitoring.writer.filesystem.AsyncFsWriter
kieker.monitoring.writer=kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter
kopeme.kiekermonitoring.realwriter=AsyncFsWriter

#####
#kieker.monitoring.writer=kieker.monitoring.writer.PrintStreamWriter
#
## The PrintStream used to print the monitoring records.
## Either STDOUT or STDERR.
## Other values are used as a filenames for a target log file.
## You should use another writer instead of this writer for logging to files!
kieker.monitoring.writer.PrintStreamWriter.Stream=STDOUT



####
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.customStoragePath=
#
## The maximal number of entries (records) per created file.
## Must be greater than zero.
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.maxEntriesInFile=50000
#
## The maximal file size of the generated monitoring log. Older files will be 
## deleted if this file size is exceeded. Given in MiB.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.maxLogSize=-1
#
## The maximal number of log files generated. Older files will be 
## deleted if this number is exceeded.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.maxLogFiles=-1
#
## When flushing is disabled, it could require a lot of records before
## finally any writing is done.
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.flush=true
#
## When flushing is disabled, records are buffered in memory before written.
## This setting configures the size of the used buffer in bytes.
kieker.monitoring.writer.filesystem.ChangeableFolderSyncFsWriter.bufferSize=8192




#####
#kieker.monitoring.writer=kieker.monitoring.writer.filesystem.SyncFsWriter
#
## In order to use a custom directory, set customStoragePath as desired. Examples:
## /var/kieker or C:\\KiekerData (ensure the folder exists).
## Otherwise the default temporary directory will be used
kieker.monitoring.writer.filesystem.SyncFsWriter.customStoragePath=
#
## The maximal number of entries (records) per created file.
## Must be greater than zero.
kieker.monitoring.writer.filesystem.SyncFsWriter.maxEntriesInFile=25000
#
## The maximal file size of the generated monitoring log. Older files will be 
## deleted if this file size is exceeded. Given in MiB.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.SyncFsWriter.maxLogSize=-1
#
## The maximal number of log files generated. Older files will be 
## deleted if this number is exceeded.
## At least one file will always remain, regardless of size!
## Use -1 to ignore this functionality. 
kieker.monitoring.writer.filesystem.SyncFsWriter.maxLogFiles=-1
#
## When flushing is disabled, it could require a lot of records before
## finally any writing is done.
kieker.monitoring.writer.filesystem.SyncFsWriter.flush=true
#
## When flushing is disabled, records are buffered in memory before written.
## This setting configures the size of the used buffer in bytes.
kieker.monitoring.writer.filesystem.SyncFsWriter.bufferSize=8192

